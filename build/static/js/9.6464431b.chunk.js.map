{"version":3,"file":"static/js/9.6464431b.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/ChevronRight.js","../node_modules/@mui/icons-material/ExpandMore.js","../node_modules/@mui/lab/TreeItem/TreeItemContent.js","../node_modules/@mui/lab/TreeItem/treeItemClasses.js","../node_modules/@mui/lab/TreeItem/TreeItem.js","../node_modules/@mui/lab/TreeItem/useTreeItem.js","../node_modules/@mui/lab/TreeView/treeViewClasses.js","../node_modules/@mui/lab/TreeView/TreeView.js","../node_modules/@mui/lab/TreeView/TreeViewContext.js","../node_modules/@mui/lab/TreeView/descendants.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"className\", \"displayIcon\", \"expansionIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport useTreeItem from './useTreeItem';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TreeItemContent = /*#__PURE__*/React.forwardRef(function TreeItemContent(props, ref) {\n  const {\n    classes,\n    className,\n    displayIcon,\n    expansionIcon,\n    icon: iconProp,\n    label,\n    nodeId,\n    onClick,\n    onMouseDown\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    disabled,\n    expanded,\n    selected,\n    focused,\n    handleExpansion,\n    handleSelection,\n    preventSelection\n  } = useTreeItem(nodeId);\n  const icon = iconProp || expansionIcon || displayIcon;\n\n  const handleMouseDown = event => {\n    preventSelection(event);\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  const handleClick = event => {\n    handleExpansion(event);\n    handleSelection(event);\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions -- Key event is handled by the TreeView */\n    _jsxs(\"div\", _extends({\n      className: clsx(className, classes.root, expanded && classes.expanded, selected && classes.selected, focused && classes.focused, disabled && classes.disabled),\n      onClick: handleClick,\n      onMouseDown: handleMouseDown,\n      ref: ref\n    }, other, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: classes.iconContainer,\n        children: icon\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: classes.label,\n        children: label\n      })]\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItemContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * className applied to the root element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display next to the tree node's label. Either a parent or end icon.\n   */\n  displayIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label. Either an expansion or collapse icon.\n   */\n  expansionIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func\n} : void 0;\nexport default TreeItemContent;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTreeItemUtilityClass(slot) {\n  return generateUtilityClass('MuiTreeItem', slot);\n}\nconst treeItemClasses = generateUtilityClasses('MuiTreeItem', ['root', 'group', 'content', 'expanded', 'selected', 'focused', 'disabled', 'iconContainer', 'label']);\nexport default treeItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"collapseIcon\", \"ContentComponent\", \"ContentProps\", \"endIcon\", \"expandIcon\", \"disabled\", \"icon\", \"id\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport Collapse from '@mui/material/Collapse';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport { ownerDocument, useForkRef, unsupportedProp } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nimport { DescendantProvider, useDescendant } from '../TreeView/descendants';\nimport TreeItemContent from './TreeItemContent';\nimport treeItemClasses, { getTreeItemUtilityClass } from './treeItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    content: ['content'],\n    expanded: ['expanded'],\n    selected: ['selected'],\n    focused: ['focused'],\n    disabled: ['disabled'],\n    iconContainer: ['iconContainer'],\n    label: ['label'],\n    group: ['group']\n  };\n  return composeClasses(slots, getTreeItemUtilityClass, classes);\n};\n\nconst TreeItemRoot = styled('li', {\n  name: 'MuiTreeItem',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  outline: 0\n});\nconst StyledTreeItemContent = styled(TreeItemContent, {\n  name: 'MuiTreeItem',\n  slot: 'Content',\n  overridesResolver: (props, styles) => {\n    return [styles.content, styles.iconContainer && {\n      [`& .${treeItemClasses.iconContainer}`]: styles.iconContainer\n    }, styles.label && {\n      [`& .${treeItemClasses.label}`]: styles.label\n    }];\n  }\n})(({\n  theme\n}) => ({\n  padding: '0 8px',\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  WebkitTapHighlightColor: 'transparent',\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${treeItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity,\n    backgroundColor: 'transparent'\n  },\n  [`&.${treeItemClasses.focused}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${treeItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n    [`&.${treeItemClasses.focused}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`& .${treeItemClasses.iconContainer}`]: {\n    marginRight: 4,\n    width: 15,\n    display: 'flex',\n    flexShrink: 0,\n    justifyContent: 'center',\n    '& svg': {\n      fontSize: 18\n    }\n  },\n  [`& .${treeItemClasses.label}`]: _extends({\n    width: '100%',\n    // fixes overflow - see https://github.com/mui/material-ui/issues/27372\n    minWidth: 0,\n    paddingLeft: 4,\n    position: 'relative'\n  }, theme.typography.body1)\n}));\nconst TreeItemGroup = styled(Collapse, {\n  name: 'MuiTreeItem',\n  slot: 'Group',\n  overridesResolver: (props, styles) => styles.group\n})({\n  margin: 0,\n  padding: 0,\n  marginLeft: 17\n});\nconst TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeItem'\n  });\n\n  const {\n    children,\n    className,\n    collapseIcon,\n    ContentComponent = TreeItemContent,\n    ContentProps,\n    endIcon,\n    expandIcon,\n    disabled: disabledProp,\n    icon,\n    id: idProp,\n    label,\n    nodeId,\n    onClick,\n    onMouseDown,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    icons: contextIcons = {},\n    focus,\n    isExpanded,\n    isFocused,\n    isSelected,\n    isDisabled,\n    multiSelect,\n    disabledItemsFocusable,\n    mapFirstChar,\n    unMapFirstChar,\n    registerNode,\n    unregisterNode,\n    treeId\n  } = React.useContext(TreeViewContext);\n  let id = null;\n\n  if (idProp != null) {\n    id = idProp;\n  } else if (treeId && nodeId) {\n    id = `${treeId}-${nodeId}`;\n  }\n\n  const [treeitemElement, setTreeitemElement] = React.useState(null);\n  const contentRef = React.useRef(null);\n  const handleRef = useForkRef(setTreeitemElement, ref);\n  const descendant = React.useMemo(() => ({\n    element: treeitemElement,\n    id: nodeId\n  }), [nodeId, treeitemElement]);\n  const {\n    index,\n    parentId\n  } = useDescendant(descendant);\n  const expandable = Boolean(Array.isArray(children) ? children.length : children);\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n\n  const ownerState = _extends({}, props, {\n    expanded,\n    focused,\n    selected,\n    disabled\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayIcon;\n  let expansionIcon;\n\n  if (expandable) {\n    if (!expanded) {\n      expansionIcon = expandIcon || contextIcons.defaultExpandIcon;\n    } else {\n      expansionIcon = collapseIcon || contextIcons.defaultCollapseIcon;\n    }\n  }\n\n  if (expandable) {\n    displayIcon = contextIcons.defaultParentIcon;\n  } else {\n    displayIcon = endIcon || contextIcons.defaultEndIcon;\n  }\n\n  React.useEffect(() => {\n    // On the first render a node's index will be -1. We want to wait for the real index.\n    if (registerNode && unregisterNode && index !== -1) {\n      registerNode({\n        id: nodeId,\n        idAttribute: id,\n        index,\n        parentId,\n        expandable,\n        disabled: disabledProp\n      });\n      return () => {\n        unregisterNode(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [registerNode, unregisterNode, parentId, index, nodeId, expandable, disabledProp, id]);\n  React.useEffect(() => {\n    if (mapFirstChar && unMapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n      return () => {\n        unMapFirstChar(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [mapFirstChar, unMapFirstChar, nodeId, label]);\n  let ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    /* single-selection trees unset aria-selected on un-selected items.\n     *\n     * If the tree does not support multiple selection, aria-selected\n     * is set to true for the selected node and it is not present on any other node in the tree.\n     * Source: https://www.w3.org/WAI/ARIA/apg/patterns/treeview/\n     */\n    ariaSelected = true;\n  }\n\n  function handleFocus(event) {\n    // DOM focus stays on the tree which manages focus with aria-activedescendant\n    if (event.target === event.currentTarget) {\n      ownerDocument(event.target).getElementById(treeId).focus({\n        preventScroll: true\n      });\n    }\n\n    const unfocusable = !disabledItemsFocusable && disabled;\n\n    if (!focused && event.currentTarget === event.target && !unfocusable) {\n      focus(event, nodeId);\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(TreeItemRoot, _extends({\n    className: clsx(classes.root, className),\n    role: \"treeitem\",\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    \"aria-disabled\": disabled || null,\n    ref: handleRef,\n    id: id,\n    tabIndex: -1\n  }, other, {\n    ownerState: ownerState,\n    onFocus: handleFocus,\n    children: [/*#__PURE__*/_jsx(StyledTreeItemContent, _extends({\n      as: ContentComponent,\n      ref: contentRef,\n      classes: {\n        root: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        focused: classes.focused,\n        disabled: classes.disabled,\n        iconContainer: classes.iconContainer,\n        label: classes.label\n      },\n      label: label,\n      nodeId: nodeId,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      icon: icon,\n      expansionIcon: expansionIcon,\n      displayIcon: displayIcon,\n      ownerState: ownerState\n    }, ContentProps)), children && /*#__PURE__*/_jsx(DescendantProvider, {\n      id: nodeId,\n      children: /*#__PURE__*/_jsx(TreeItemGroup, _extends({\n        as: TransitionComponent,\n        unmountOnExit: true,\n        className: classes.group,\n        in: expanded,\n        component: \"ul\",\n        role: \"group\"\n      }, TransitionProps, {\n        children: children\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The component used for the content node.\n   * @default TreeItemContent\n   */\n  ContentComponent: elementTypeAcceptingRef,\n\n  /**\n   * Props applied to ContentComponent\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the node is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * This prop isn't supported.\n   * Use the `onNodeFocus` callback on the tree if you need to monitor a node's focus.\n   */\n  onFocus: unsupportedProp,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default TreeItem;","import * as React from 'react';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport default function useTreeItem(nodeId) {\n  const {\n    focus,\n    isExpanded,\n    isExpandable,\n    isFocused,\n    isDisabled,\n    isSelected,\n    multiSelect,\n    selectNode,\n    selectRange,\n    toggleExpansion\n  } = React.useContext(TreeViewContext);\n  const expandable = isExpandable ? isExpandable(nodeId) : false;\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n\n  const handleExpansion = event => {\n    if (!disabled) {\n      if (!focused) {\n        focus(event, nodeId);\n      }\n\n      const multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n      if (expandable && !(multiple && isExpanded(nodeId))) {\n        toggleExpansion(event, nodeId);\n      }\n    }\n  };\n\n  const handleSelection = event => {\n    if (!disabled) {\n      if (!focused) {\n        focus(event, nodeId);\n      }\n\n      const multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey);\n\n      if (multiple) {\n        if (event.shiftKey) {\n          selectRange(event, {\n            end: nodeId\n          });\n        } else {\n          selectNode(event, nodeId, true);\n        }\n      } else {\n        selectNode(event, nodeId);\n      }\n    }\n  };\n\n  const preventSelection = event => {\n    if (event.shiftKey || event.ctrlKey || event.metaKey || disabled) {\n      // Prevent text selection\n      event.preventDefault();\n    }\n  };\n\n  return {\n    disabled,\n    expanded,\n    selected,\n    focused,\n    handleExpansion,\n    handleSelection,\n    preventSelection\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTreeViewUtilityClass(slot) {\n  return generateUtilityClass('MuiTreeView', slot);\n}\nconst treeViewClasses = generateUtilityClasses('MuiTreeView', ['root']);\nexport default treeViewClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disabledItemsFocusable\", \"disableSelection\", \"expanded\", \"id\", \"multiSelect\", \"onBlur\", \"onFocus\", \"onKeyDown\", \"onNodeFocus\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { styled, useTheme, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useControlled, useForkRef, ownerDocument, unstable_useId as useId } from '@mui/material/utils';\nimport TreeViewContext from './TreeViewContext';\nimport { DescendantProvider } from './descendants';\nimport { getTreeViewUtilityClass } from './treeViewClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTreeViewUtilityClass, classes);\n};\n\nconst TreeViewRoot = styled('ul', {\n  name: 'MuiTreeView',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 0,\n  margin: 0,\n  listStyle: 'none',\n  outline: 0\n});\n\nfunction isPrintableCharacter(string) {\n  return string && string.length === 1 && string.match(/\\S/);\n}\n\nfunction findNextFirstChar(firstChars, startIndex, char) {\n  for (let i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction noopSelection() {\n  return false;\n}\n\nconst defaultDefaultExpanded = [];\nconst defaultDefaultSelected = [];\nconst TreeView = /*#__PURE__*/React.forwardRef(function TreeView(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeView'\n  });\n\n  const {\n    children,\n    className,\n    defaultCollapseIcon,\n    defaultEndIcon,\n    defaultExpanded = defaultDefaultExpanded,\n    defaultExpandIcon,\n    defaultParentIcon,\n    defaultSelected = defaultDefaultSelected,\n    disabledItemsFocusable = false,\n    disableSelection = false,\n    expanded: expandedProp,\n    id: idProp,\n    multiSelect = false,\n    onBlur,\n    onFocus,\n    onKeyDown,\n    onNodeFocus,\n    onNodeSelect,\n    onNodeToggle,\n    selected: selectedProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const ownerState = _extends({}, props, {\n    defaultExpanded,\n    defaultSelected,\n    disabledItemsFocusable,\n    disableSelection,\n    multiSelect\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const treeId = useId(idProp);\n  const treeRef = React.useRef(null);\n  const handleRef = useForkRef(treeRef, ref);\n  const [focusedNodeId, setFocusedNodeId] = React.useState(null);\n  const nodeMap = React.useRef({});\n  const firstCharMap = React.useRef({});\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  });\n  const [selected, setSelectedState] = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  });\n  /*\n   * Status Helpers\n   */\n\n  const isExpanded = React.useCallback(id => Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false, [expanded]);\n  const isExpandable = React.useCallback(id => nodeMap.current[id] && nodeMap.current[id].expandable, []);\n  const isSelected = React.useCallback(id => Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id, [selected]);\n  const isDisabled = React.useCallback(id => {\n    let node = nodeMap.current[id]; // This can be called before the node has been added to the node map.\n\n    if (!node) {\n      return false;\n    }\n\n    if (node.disabled) {\n      return true;\n    }\n\n    while (node.parentId != null) {\n      node = nodeMap.current[node.parentId];\n\n      if (node.disabled) {\n        return true;\n      }\n    }\n\n    return false;\n  }, []);\n\n  const isFocused = id => focusedNodeId === id;\n  /*\n   * Child Helpers\n   */\n  // Using Object.keys -> .map to mimic Object.values we should replace with Object.values() once we stop IE11 support.\n\n\n  const getChildrenIds = id => Object.keys(nodeMap.current).map(key => {\n    return nodeMap.current[key];\n  }).filter(node => node.parentId === id).sort((a, b) => a.index - b.index).map(child => child.id);\n\n  const getNavigableChildrenIds = id => {\n    let childrenIds = getChildrenIds(id);\n\n    if (!disabledItemsFocusable) {\n      childrenIds = childrenIds.filter(node => !isDisabled(node));\n    }\n\n    return childrenIds;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  const getNextNode = id => {\n    // If expanded get first child\n    if (isExpanded(id) && getNavigableChildrenIds(id).length > 0) {\n      return getNavigableChildrenIds(id)[0];\n    }\n\n    let node = nodeMap.current[id];\n\n    while (node != null) {\n      // Try to get next sibling\n      const siblings = getNavigableChildrenIds(node.parentId);\n      const nextSibling = siblings[siblings.indexOf(node.id) + 1];\n\n      if (nextSibling) {\n        return nextSibling;\n      } // If the sibling does not exist, go up a level to the parent and try again.\n\n\n      node = nodeMap.current[node.parentId];\n    }\n\n    return null;\n  };\n\n  const getPreviousNode = id => {\n    const node = nodeMap.current[id];\n    const siblings = getNavigableChildrenIds(node.parentId);\n    const nodeIndex = siblings.indexOf(id);\n\n    if (nodeIndex === 0) {\n      return node.parentId;\n    }\n\n    let currentNode = siblings[nodeIndex - 1];\n\n    while (isExpanded(currentNode) && getNavigableChildrenIds(currentNode).length > 0) {\n      currentNode = getNavigableChildrenIds(currentNode).pop();\n    }\n\n    return currentNode;\n  };\n\n  const getLastNode = () => {\n    let lastNode = getNavigableChildrenIds(null).pop();\n\n    while (isExpanded(lastNode)) {\n      lastNode = getNavigableChildrenIds(lastNode).pop();\n    }\n\n    return lastNode;\n  };\n\n  const getFirstNode = () => getNavigableChildrenIds(null)[0];\n\n  const getParent = id => nodeMap.current[id].parentId;\n  /**\n   * This is used to determine the start and end of a selection range so\n   * we can get the nodes between the two border nodes.\n   *\n   * It finds the nodes' common ancestor using\n   * a naive implementation of a lowest common ancestor algorithm\n   * (https://en.wikipedia.org/wiki/Lowest_common_ancestor).\n   * Then compares the ancestor's 2 children that are ancestors of nodeA and NodeB\n   * so we can compare their indexes to work out which node comes first in a depth first search.\n   * (https://en.wikipedia.org/wiki/Depth-first_search)\n   *\n   * Another way to put it is which node is shallower in a trémaux tree\n   * https://en.wikipedia.org/wiki/Tr%C3%A9maux_tree\n   */\n\n\n  const findOrderInTremauxTree = (nodeAId, nodeBId) => {\n    if (nodeAId === nodeBId) {\n      return [nodeAId, nodeBId];\n    }\n\n    const nodeA = nodeMap.current[nodeAId];\n    const nodeB = nodeMap.current[nodeBId];\n\n    if (nodeA.parentId === nodeB.id || nodeB.parentId === nodeA.id) {\n      return nodeB.parentId === nodeA.id ? [nodeA.id, nodeB.id] : [nodeB.id, nodeA.id];\n    }\n\n    const aFamily = [nodeA.id];\n    const bFamily = [nodeB.id];\n    let aAncestor = nodeA.parentId;\n    let bAncestor = nodeB.parentId;\n    let aAncestorIsCommon = bFamily.indexOf(aAncestor) !== -1;\n    let bAncestorIsCommon = aFamily.indexOf(bAncestor) !== -1;\n    let continueA = true;\n    let continueB = true;\n\n    while (!bAncestorIsCommon && !aAncestorIsCommon) {\n      if (continueA) {\n        aFamily.push(aAncestor);\n        aAncestorIsCommon = bFamily.indexOf(aAncestor) !== -1;\n        continueA = aAncestor !== null;\n\n        if (!aAncestorIsCommon && continueA) {\n          aAncestor = nodeMap.current[aAncestor].parentId;\n        }\n      }\n\n      if (continueB && !aAncestorIsCommon) {\n        bFamily.push(bAncestor);\n        bAncestorIsCommon = aFamily.indexOf(bAncestor) !== -1;\n        continueB = bAncestor !== null;\n\n        if (!bAncestorIsCommon && continueB) {\n          bAncestor = nodeMap.current[bAncestor].parentId;\n        }\n      }\n    }\n\n    const commonAncestor = aAncestorIsCommon ? aAncestor : bAncestor;\n    const ancestorFamily = getChildrenIds(commonAncestor);\n    const aSide = aFamily[aFamily.indexOf(commonAncestor) - 1];\n    const bSide = bFamily[bFamily.indexOf(commonAncestor) - 1];\n    return ancestorFamily.indexOf(aSide) < ancestorFamily.indexOf(bSide) ? [nodeAId, nodeBId] : [nodeBId, nodeAId];\n  };\n\n  const getNodesInRange = (nodeA, nodeB) => {\n    const [first, last] = findOrderInTremauxTree(nodeA, nodeB);\n    const nodes = [first];\n    let current = first;\n\n    while (current !== last) {\n      current = getNextNode(current);\n      nodes.push(current);\n    }\n\n    return nodes;\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  const focus = (event, id) => {\n    if (id) {\n      setFocusedNodeId(id);\n\n      if (onNodeFocus) {\n        onNodeFocus(event, id);\n      }\n    }\n  };\n\n  const focusNextNode = (event, id) => focus(event, getNextNode(id));\n\n  const focusPreviousNode = (event, id) => focus(event, getPreviousNode(id));\n\n  const focusFirstNode = event => focus(event, getFirstNode());\n\n  const focusLastNode = event => focus(event, getLastNode());\n\n  const focusByFirstCharacter = (event, id, char) => {\n    let start;\n    let index;\n    const lowercaseChar = char.toLowerCase();\n    const firstCharIds = [];\n    const firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(nodeId => {\n      const firstChar = firstCharMap.current[nodeId];\n      const map = nodeMap.current[nodeId];\n      const visible = map.parentId ? isExpanded(map.parentId) : true;\n      const shouldBeSkipped = disabledItemsFocusable ? false : isDisabled(nodeId);\n\n      if (visible && !shouldBeSkipped) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start >= firstCharIds.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(event, firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  const toggleExpansion = (event, value = focusedNodeId) => {\n    let newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(id => id !== value);\n    } else {\n      newExpanded = [value].concat(expanded);\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  const expandAllSiblings = (event, id) => {\n    const map = nodeMap.current[id];\n    const siblings = getChildrenIds(map.parentId);\n    const diff = siblings.filter(child => isExpandable(child) && !isExpanded(child));\n    const newExpanded = expanded.concat(diff);\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  const lastSelectedNode = React.useRef(null);\n  const lastSelectionWasRange = React.useRef(false);\n  const currentRangeSelection = React.useRef([]);\n\n  const handleRangeArrowSelect = (event, nodes) => {\n    let base = selected.slice();\n    const {\n      start,\n      next,\n      current\n    } = nodes;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(id => id === start || id !== current);\n        currentRangeSelection.current = currentRangeSelection.current.filter(id => id === start || id !== current);\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  const handleRangeSelect = (event, nodes) => {\n    let base = selected.slice();\n    const {\n      start,\n      end\n    } = nodes; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = base.filter(id => currentRangeSelection.current.indexOf(id) === -1);\n    }\n\n    let range = getNodesInRange(start, end);\n    range = range.filter(node => !isDisabled(node));\n    currentRangeSelection.current = range;\n    let newSelected = base.concat(range);\n    newSelected = newSelected.filter((id, i) => newSelected.indexOf(id) === i);\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  const handleMultipleSelect = (event, value) => {\n    let newSelected;\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(id => id !== value);\n    } else {\n      newSelected = [value].concat(selected);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  const handleSingleSelect = (event, value) => {\n    const newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  const selectNode = (event, id, multiple = false) => {\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  const selectRange = (event, nodes, stacked = false) => {\n    const {\n      start = lastSelectedNode.current,\n      end,\n      current\n    } = nodes;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start,\n        next: end,\n        current\n      });\n    } else if (start != null && end != null) {\n      handleRangeSelect(event, {\n        start,\n        end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n  };\n\n  const rangeSelectToFirst = (event, id) => {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    const start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    selectRange(event, {\n      start,\n      end: getFirstNode()\n    });\n  };\n\n  const rangeSelectToLast = (event, id) => {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    const start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    selectRange(event, {\n      start,\n      end: getLastNode()\n    });\n  };\n\n  const selectNextNode = (event, id) => {\n    if (!isDisabled(getNextNode(id))) {\n      selectRange(event, {\n        end: getNextNode(id),\n        current: id\n      }, true);\n    }\n  };\n\n  const selectPreviousNode = (event, id) => {\n    if (!isDisabled(getPreviousNode(id))) {\n      selectRange(event, {\n        end: getPreviousNode(id),\n        current: id\n      }, true);\n    }\n  };\n\n  const selectAllNodes = event => {\n    selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  const registerNode = React.useCallback(node => {\n    const {\n      id,\n      index,\n      parentId,\n      expandable,\n      idAttribute,\n      disabled\n    } = node;\n    nodeMap.current[id] = {\n      id,\n      index,\n      parentId,\n      expandable,\n      idAttribute,\n      disabled\n    };\n  }, []);\n  const unregisterNode = React.useCallback(id => {\n    const newMap = _extends({}, nodeMap.current);\n\n    delete newMap[id];\n    nodeMap.current = newMap;\n    setFocusedNodeId(oldFocusedNodeId => {\n      if (oldFocusedNodeId === id && treeRef.current === ownerDocument(treeRef.current).activeElement) {\n        return getChildrenIds(null)[0];\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, []);\n  const mapFirstChar = React.useCallback((id, firstChar) => {\n    firstCharMap.current[id] = firstChar;\n  }, []);\n  const unMapFirstChar = React.useCallback(id => {\n    const newMap = _extends({}, firstCharMap.current);\n\n    delete newMap[id];\n    firstCharMap.current = newMap;\n  }, []);\n  /**\n   * Event handlers and Navigation\n   */\n\n  const handleNextArrow = event => {\n    if (isExpandable(focusedNodeId)) {\n      if (isExpanded(focusedNodeId)) {\n        focusNextNode(event, focusedNodeId);\n      } else if (!isDisabled(focusedNodeId)) {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  const handlePreviousArrow = event => {\n    if (isExpanded(focusedNodeId) && !isDisabled(focusedNodeId)) {\n      toggleExpansion(event, focusedNodeId);\n      return true;\n    }\n\n    const parent = getParent(focusedNodeId);\n\n    if (parent) {\n      focus(event, parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  const handleKeyDown = event => {\n    let flag = false;\n    const key = event.key; // If the tree is empty there will be no focused node\n\n    if (event.altKey || event.currentTarget !== event.target || !focusedNodeId) {\n      return;\n    }\n\n    const ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (!disableSelection && !isDisabled(focusedNodeId)) {\n          if (multiSelect && event.shiftKey) {\n            selectRange(event, {\n              end: focusedNodeId\n            });\n            flag = true;\n          } else if (multiSelect) {\n            flag = selectNode(event, focusedNodeId, true);\n          } else {\n            flag = selectNode(event, focusedNodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (!isDisabled(focusedNodeId)) {\n          if (isExpandable(focusedNodeId)) {\n            toggleExpansion(event);\n            flag = true;\n          } else if (multiSelect) {\n            flag = selectNode(event, focusedNodeId, true);\n          } else {\n            flag = selectNode(event, focusedNodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey && !disableSelection) {\n          selectNextNode(event, focusedNodeId);\n        }\n\n        focusNextNode(event, focusedNodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey && !disableSelection) {\n          selectPreviousNode(event, focusedNodeId);\n        }\n\n        focusPreviousNode(event, focusedNodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (isRtl) {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (isRtl) {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey && !disableSelection && !isDisabled(focusedNodeId)) {\n          rangeSelectToFirst(event, focusedNodeId);\n        }\n\n        focusFirstNode(event);\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey && !disableSelection && !isDisabled(focusedNodeId)) {\n          rangeSelectToLast(event, focusedNodeId);\n        }\n\n        focusLastNode(event);\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, focusedNodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a' && !disableSelection) {\n          selectAllNodes(event);\n          flag = true;\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(event, focusedNodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleFocus = event => {\n    // if the event bubbled (which is React specific) we don't want to steal focus\n    if (event.target === event.currentTarget) {\n      const firstSelected = Array.isArray(selected) ? selected[0] : selected;\n      focus(event, firstSelected || getNavigableChildrenIds(null)[0]);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocusedNodeId(null);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const activeDescendant = nodeMap.current[focusedNodeId] ? nodeMap.current[focusedNodeId].idAttribute : null;\n  return /*#__PURE__*/_jsx(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon,\n        defaultExpandIcon,\n        defaultParentIcon,\n        defaultEndIcon\n      },\n      focus,\n      toggleExpansion,\n      isExpanded,\n      isExpandable,\n      isFocused,\n      isSelected,\n      isDisabled,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      multiSelect,\n      disabledItemsFocusable,\n      mapFirstChar,\n      unMapFirstChar,\n      registerNode,\n      unregisterNode,\n      treeId\n    },\n    children: /*#__PURE__*/_jsx(DescendantProvider, {\n      children: /*#__PURE__*/_jsx(TreeViewRoot, _extends({\n        role: \"tree\",\n        id: treeId,\n        \"aria-activedescendant\": activeDescendant,\n        \"aria-multiselectable\": multiSelect,\n        className: clsx(classes.root, className),\n        ref: handleRef,\n        tabIndex: 0,\n        onKeyDown: handleKeyDown,\n        onFocus: handleFocus,\n        onBlur: handleBlur,\n        ownerState: ownerState\n      }, other, {\n        children: children\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n\n  /**\n   * Expanded node ids. (Uncontrolled)\n   * @default []\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n\n  /**\n   * Selected node ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   * @default []\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true` selection is disabled.\n   * @default false\n   */\n  disableSelection: PropTypes.bool,\n\n  /**\n   * Expanded node ids. (Controlled)\n   */\n  expanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If true `ctrl` and `shift` will trigger multiselect.\n   * @default false\n   */\n  multiSelect: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are focused.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback **Warning**: This is a generic event not a focus event.\n   * @param {string} value of the focused node.\n   */\n  onNodeFocus: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are selected/unselected.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback\n   * @param {string[] | string} nodeIds Ids of the selected nodes. When `multiSelect` is true\n   * this is an array of strings; when false (default) a string.\n   */\n  onNodeSelect: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are expanded/collapsed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {array} nodeIds The ids of the expanded nodes.\n   */\n  onNodeToggle: PropTypes.func,\n\n  /**\n   * Selected node ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TreeView;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst TreeViewContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewContext.displayName = 'TreeViewContext';\n}\n\nexport default TreeViewContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"element\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\n/** Credit: https://github.com/reach/reach-ui/blob/86a046f54d53b6420e392b3fa56dd991d9d4e458/packages/descendants/README.md\n *  Modified slightly to suit our purposes.\n */\n// To replace with .findIndex() once we stop IE11 support.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction binaryFindElement(array, element) {\n  let start = 0;\n  let end = array.length - 1;\n\n  while (start <= end) {\n    const middle = Math.floor((start + end) / 2);\n\n    if (array[middle].element === element) {\n      return middle;\n    } // eslint-disable-next-line no-bitwise\n\n\n    if (array[middle].element.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_PRECEDING) {\n      end = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n  }\n\n  return start;\n}\n\nconst DescendantContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  DescendantContext.displayName = 'DescendantContext';\n}\n\nfunction usePrevious(value) {\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\nconst noop = () => {};\n/**\n * This hook registers our descendant by passing it into an array. We can then\n * search that array by to find its index when registering it in the component.\n * We use this for focus management, keyboard navigation, and typeahead\n * functionality for some components.\n *\n * The hook accepts the element node\n *\n * Our main goals with this are:\n *   1) maximum composability,\n *   2) minimal API friction\n *   3) SSR compatibility*\n *   4) concurrent safe\n *   5) index always up-to-date with the tree despite changes\n *   6) works with memoization of any component in the tree (hopefully)\n *\n * * As for SSR, the good news is that we don't actually need the index on the\n * server for most use-cases, as we are only using it to determine the order of\n * composed descendants for keyboard navigation.\n */\n\n\nexport function useDescendant(descendant) {\n  const [, forceUpdate] = React.useState();\n  const {\n    registerDescendant = noop,\n    unregisterDescendant = noop,\n    descendants = [],\n    parentId = null\n  } = React.useContext(DescendantContext); // This will initially return -1 because we haven't registered the descendant\n  // on the first render. After we register, this will then return the correct\n  // index on the following render and we will re-register descendants\n  // so that everything is up-to-date before the user interacts with a\n  // collection.\n\n  const index = findIndex(descendants, item => item.element === descendant.element);\n  const previousDescendants = usePrevious(descendants); // We also need to re-register descendants any time ANY of the other\n  // descendants have changed. My brain was melting when I wrote this and it\n  // feels a little off, but checking in render and using the result in the\n  // effect's dependency array works well enough.\n\n  const someDescendantsHaveChanged = descendants.some((newDescendant, position) => {\n    return previousDescendants && previousDescendants[position] && previousDescendants[position].element !== newDescendant.element;\n  }); // Prevent any flashing\n\n  useEnhancedEffect(() => {\n    if (descendant.element) {\n      registerDescendant(_extends({}, descendant, {\n        index\n      }));\n      return () => {\n        unregisterDescendant(descendant.element);\n      };\n    }\n\n    forceUpdate({});\n    return undefined;\n  }, [registerDescendant, unregisterDescendant, index, someDescendantsHaveChanged, descendant]);\n  return {\n    parentId,\n    index\n  };\n}\nexport function DescendantProvider(props) {\n  const {\n    children,\n    id\n  } = props;\n  const [items, set] = React.useState([]);\n  const registerDescendant = React.useCallback(_ref => {\n    let {\n      element\n    } = _ref,\n        other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n    set(oldItems => {\n      let newItems;\n\n      if (oldItems.length === 0) {\n        // If there are no items, register at index 0 and bail.\n        return [_extends({}, other, {\n          element,\n          index: 0\n        })];\n      }\n\n      const index = binaryFindElement(oldItems, element);\n\n      if (oldItems[index] && oldItems[index].element === element) {\n        // If the element is already registered, just use the same array\n        newItems = oldItems;\n      } else {\n        // When registering a descendant, we need to make sure we insert in\n        // into the array in the same order that it appears in the DOM. So as\n        // new descendants are added or maybe some are removed, we always know\n        // that the array is up-to-date and correct.\n        //\n        // So here we look at our registered descendants and see if the new\n        // element we are adding appears earlier than an existing descendant's\n        // DOM node via `node.compareDocumentPosition`. If it does, we insert\n        // the new element at this index. Because `registerDescendant` will be\n        // called in an effect every time the descendants state value changes,\n        // we should be sure that this index is accurate when descendent\n        // elements come or go from our component.\n        const newItem = _extends({}, other, {\n          element,\n          index\n        }); // If an index is not found we will push the element to the end.\n\n\n        newItems = oldItems.slice();\n        newItems.splice(index, 0, newItem);\n      }\n\n      newItems.forEach((item, position) => {\n        item.index = position;\n      });\n      return newItems;\n    });\n  }, []);\n  const unregisterDescendant = React.useCallback(element => {\n    set(oldItems => oldItems.filter(item => element !== item.element));\n  }, []);\n  const value = React.useMemo(() => ({\n    descendants: items,\n    registerDescendant,\n    unregisterDescendant,\n    parentId: id\n  }), [items, registerDescendant, unregisterDescendant, id]);\n  return /*#__PURE__*/_jsx(DescendantContext.Provider, {\n    value: value,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DescendantProvider.propTypes = {\n  children: PropTypes.node,\n  id: PropTypes.string\n} : void 0;"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","React","props","ref","classes","className","displayIcon","expansionIcon","iconProp","icon","label","nodeId","onClick","onMouseDown","other","_objectWithoutPropertiesLoose","useTreeItem","disabled","expanded","selected","focused","handleExpansion","handleSelection","preventSelection","_jsxs","_extends","clsx","root","event","children","_jsx","iconContainer","getTreeItemUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TreeItemRoot","styled","name","overridesResolver","styles","listStyle","margin","padding","outline","StyledTreeItemContent","TreeItemContent","content","treeItemClasses","theme","width","display","alignItems","cursor","WebkitTapHighlightColor","backgroundColor","palette","action","hover","opacity","disabledOpacity","focus","alpha","primary","main","selectedOpacity","hoverOpacity","focusOpacity","marginRight","flexShrink","justifyContent","fontSize","minWidth","paddingLeft","position","typography","body1","TreeItemGroup","Collapse","group","marginLeft","inProps","useThemeProps","collapseIcon","ContentComponent","ContentProps","endIcon","expandIcon","disabledProp","idProp","id","TransitionComponent","TransitionProps","TreeViewContext","icons","contextIcons","isExpanded","isFocused","isSelected","isDisabled","multiSelect","disabledItemsFocusable","mapFirstChar","unMapFirstChar","registerNode","unregisterNode","treeId","ariaSelected","treeitemElement","setTreeitemElement","contentRef","handleRef","useForkRef","descendant","element","useDescendant","index","parentId","expandable","Boolean","Array","isArray","length","ownerState","composeClasses","useUtilityClasses","defaultCollapseIcon","defaultExpandIcon","defaultParentIcon","defaultEndIcon","idAttribute","current","textContent","substring","toLowerCase","role","tabIndex","onFocus","target","currentTarget","ownerDocument","getElementById","preventScroll","unfocusable","as","DescendantProvider","unmountOnExit","in","component","isExpandable","selectNode","selectRange","toggleExpansion","multiple","shiftKey","ctrlKey","metaKey","end","preventDefault","getTreeViewUtilityClass","TreeViewRoot","findNextFirstChar","firstChars","startIndex","char","i","noopSelection","defaultDefaultExpanded","defaultDefaultSelected","TreeView","defaultExpanded","defaultSelected","disableSelection","expandedProp","onBlur","onKeyDown","onNodeFocus","onNodeSelect","onNodeToggle","selectedProp","isRtl","useTheme","direction","useId","treeRef","focusedNodeId","setFocusedNodeId","nodeMap","firstCharMap","useControlled","controlled","state","setExpandedState","setSelectedState","indexOf","node","getChildrenIds","Object","keys","map","key","filter","sort","a","b","child","getNavigableChildrenIds","childrenIds","getNextNode","siblings","nextSibling","getPreviousNode","nodeIndex","currentNode","pop","getLastNode","lastNode","getFirstNode","getNodesInRange","nodeA","nodeB","nodeAId","nodeBId","aFamily","bFamily","aAncestor","bAncestor","aAncestorIsCommon","bAncestorIsCommon","continueA","continueB","push","commonAncestor","ancestorFamily","aSide","bSide","findOrderInTremauxTree","first","last","nodes","focusNextNode","newExpanded","value","concat","lastSelectedNode","lastSelectionWasRange","currentRangeSelection","handleRangeArrowSelect","base","slice","start","next","handleRangeSelect","range","newSelected","handleMultipleSelect","handleSingleSelect","stacked","newMap","oldFocusedNodeId","activeElement","firstChar","handleNextArrow","handlePreviousArrow","parent","activeDescendant","flag","altKey","string","ctrlPressed","stopPropagation","selectNextNode","selectPreviousNode","focusPreviousNode","rangeSelectToFirst","focusFirstNode","rangeSelectToLast","focusLastNode","diff","expandAllSiblings","selectAllNodes","match","lowercaseChar","firstCharIds","forEach","visible","shouldBeSkipped","focusByFirstCharacter","firstSelected","DescendantContext","noop","forceUpdate","registerDescendant","unregisterDescendant","descendants","array","comp","findIndex","item","previousDescendants","usePrevious","someDescendantsHaveChanged","some","newDescendant","useEnhancedEffect","items","set","_ref","oldItems","newItems","middle","Math","floor","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","binaryFindElement","newItem","splice","Provider"],"sourceRoot":""}